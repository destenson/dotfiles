#!/bin/env bash
# Autoincluded by .bash_profile (TODO: review this file)

${SYSFUN}-file-entry $BASH_SOURCE "bash/" "
  bash/functions: provides $(cd fun; ls | grep -v '^[A-Z]*$')"

# Useful bash functions are defined each in their own file under ./fun/

for funfile in fun/*; do
 for f in *; do expr $f : "^[A-Z]*$" > /dev/null || echo $f;  done
  # skips all files named with all caps so README's are not included :)
  [[ $funfile =~ ^[A-Z]*$ ]] || \
  case "$funfile" in 
    *~)		;;
    *.bak)	;;
    *.txt)	;;
	*.sh)	;;
    *)
	  [ -f "$funfile" ] && [ -r "$funfile" ] && echo "Attempting to source $funfile" && pushd fun && . "$funfile" && popd ;;
  esac
done
unset funfile


# "commented out" by the following line and the last one in the file
if [ 0 -ne 0 ]; then
## Syntax-highlight JSON strings or files
## Usage: `json '{"foo":42}'` or `echo '{"foo":42}' | json`
#function json() {
#	if [ -t 0 ]; then # argument
#		python -mjson.tool <<< "$*" | pygmentize -l javascript;
#	else # pipe
#		python -mjson.tool | pygmentize -l javascript;
#	fi;
#}

## Run `dig` and display the most useful info
#function digga() {
#	dig +nocmd "$1" any +multiline +noall +answer;
#}

## `s` with no arguments opens the current directory in Sublime Text, otherwise
## opens the given location
#function s() {
#	if [ $# -eq 0 ]; then
#		subl .;
#	else
#		subl "$@";
#	fi;
#}

## `a` with no arguments opens the current directory in Atom Editor, otherwise
## opens the given location
#function a() {
#	if [ $# -eq 0 ]; then
#		atom .;
#	else
#		atom "$@";
#	fi;
#}

# `v` with no arguments opens the current directory in Vim, otherwise opens the
# given location
#function v() {
#	if [ $# -eq 0 ]; then
#		vim .;
#	else
#		vim "$@";
#	fi;
#}

## `o` with no arguments opens the current directory, otherwise opens the given
## location
#function o() {
#	if [ $# -eq 0 ]; then
#		open .;
#	else
#		open "$@";
#	fi;
#}

## `tre` is a shorthand for `tree` with hidden files and color enabled, ignoring
## the `.git` directory, listing directories first. The output gets piped into
## `less` with options to preserve color and line numbers, unless the output is
## small enough for one screen.
#function tre() {
#	tree -aC -I '.git|node_modules|bower_components' --dirsfirst "$@" | less -FRNX;
#}

fi # if [ 0 -ne 0 ]; then

${SYSFUN}-file-exit $BASH_SOURCE "bash/" 

# EOF
