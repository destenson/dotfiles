# Autoincluded by .bash_profile (TODO: review this file)

. $(dirname "$BASH_SOURCE")/function
. $(dirname "$BASH_SOURCE")/../bash/path

# Change one of the '0's to something else to "comment out" this whole file.
if [ 0 -eq 0 ]; then

prepend-path "/bin"
prepend-path "/usr/bin"
prepend-path "/usr/local/bin"
prepend-path "${DOTFILES_DIR}/bin"
prepend-path "${HOME}/bin"
prepend-path "/sbin"
prepend-path "/usr/sbin"
prepend-path "/usr/local/sbin"

# Set work specific path
prepend-path "${HOME}/.work/bin"

# Add a path for python
if ! is-executable python; then
  #echo python is not executable
  if [ is-linux > /dev/null ]; then
	echo "Running on Linux"
    # TODO 
	echo "WARNING: repo requires a python interpreter"
  elif is-mac; then
	echo "Running on Mac"
    # TODO 
	echo "WARNING: repo requires a python interpreter"
  elif is-windows; then
	echo "Running on Windows"
    if [ -f "${HOME}/AppData/Local/Programs/Python/*/python.exe" ]; then
      prepend-path ${HOME}/AppData/Local/Programs/Python/$(ls -1 ~/AppData/Local/Programs/Python | tail -n 1)
	fi
    true
    #is-git-bash && { [ -x /c/Python*/python.exe ] && prepend-path /c/Python* || explorer https://www.python.org/downloads/release/python-278/ ; }
    #is-cygwin && { [ -x /cygdrive/c/Python*/python.exe ] && prepend-path /cygdrive/c/Python* || explorer https://www.python.org/downloads/release/python-278/ ; }
  else
	echo "Running in unknown environment (OS=${OS})"
    # TODO 
	echo "WARNING: repo requires a python interpreter"
  fi
fi

export PATH="/c/Users/deste_000/bin:/c/Users/deste_000/dotfiles/bin:/usr/bin:/bin:/mingw64/bin:/usr/local/bin:/c/Program Files (x86)/OpenSSH/bin:/c/Users/deste_000/AppData/Roaming/npm:/usr/bin/vendor_perl:/usr/bin/core_perl"


# Remove duplicates from PATH
if is-executable awk; then
  # I don't know which of the following is better
  
  # Remove duplicates (preserving prepended items)
  # Source: http://unix.stackexchange.com/a/40755
  PATH=`echo -n $PATH | awk -v RS=: '{ if (!arr[$0]++) {printf("%s%s",!ln++?"":":",$0)}}'`

  # Source: http://stackoverflow.com/questions/1872692/removing-duplicates-on-a-variable-without-sorting
  #PATH=$(awk 'BEGIN{RS=ORS=":"}!a[$0]++' <<<$PATH)
else
  IFS=', ' read -r -a array <<< "$PATH"
  # now we have an array of paths in array
  PATH="$PATH"
fi

# Wrap up
export PATH

fi # if [ 0 -eq 0 ]; then

#EOF
