



# Get named var (usage: get "VAR_NAME")
get() {
    echo "${!1}"
}

# Executable
is-executable() {
    local BIN=$((command -v "$1" || which "$1") 2>/dev/null)
    [[ ! $BIN == "" && -x $BIN ]]
}

is-supported() {
    if [ $# -eq 1 ]; then
        eval "$1" > /dev/null 2>&1
    else
        eval "$1" > /dev/null 2>&1 && echo -n "$2" || echo -n "$3"
    fi
}

# Add to path
prepend-to-path() {
  local path_var="$1"								# the name of the PATH variable (such as "PATH")
  local to_add="$2"									# the directory to add the to given PATH variable
  if [ -d "$to_add" ]; then							# if directory to add exists
    local cur_path=$(eval echo -n "\$$1")			# evaluate the current contents of the variable
    eval "$path_var='${to_add}:${cur_path}'"		# add it
  fi
}

prepend-path() {
  prepend-to-path PATH "$1"
}

# Show 256 TERM colors
colors() {
  local X=$(tput op)
  local Y=$(printf %$((COLUMNS-6))s)
  for i in {0..256}; do
    o=00$i;
    echo -e ${o:${#o}-3:3} $(tput setaf $i;tput setab $i)${Y// /=}$X;
  done
}

# Calculator
calc() {
    echo "$*" | bc -l;
}

# Code sourcer
src() {
  if [ "x$VERBOSE_SOURCING" == "xtrue" ]; then
    [ -r "$*" ] && { echo "Sourcing \"$*\"" && source "$*" && echo "Sourced \"$*\""; } || echo "Failed to source: \"$*\""
  else
    [ -r "$*" ] && source "$*"
  fi
}

